import { AccAddress } from '@terra-money/terra.js';
export const storage = typeof window === 'undefined' ? undefined : localStorage;
export const SESSION = '__terra_chrome_extension_session__';
export function getStoredSession() {
    const data = storage === null || storage === void 0 ? void 0 : storage.getItem(SESSION);
    if (!data) {
        return undefined;
    }
    try {
        const object = JSON.parse(data);
        if ('identifier' in object &&
            'walletAddress' in object &&
            AccAddress.validate(object['walletAddress'])) {
            return {
                identifier: object['identifier'],
                walletAddress: object['walletAddress'],
            };
        }
        else {
            storage === null || storage === void 0 ? void 0 : storage.removeItem(SESSION);
            return undefined;
        }
    }
    catch (_a) {
        storage === null || storage === void 0 ? void 0 : storage.removeItem(SESSION);
        return undefined;
    }
}
export function storeSession(session) {
    if (!AccAddress.validate(session.walletAddress)) {
        throw new Error(`${session.walletAddress} is invalid terra address!`);
    }
    storage === null || storage === void 0 ? void 0 : storage.setItem(SESSION, JSON.stringify(session));
}
export function clearSession() {
    storage === null || storage === void 0 ? void 0 : storage.removeItem(SESSION);
}
//export function getStoredAddress(): string | null {
//  const address = storage?.getItem(WALLET_ADDRESS);
//  return address && AccAddress.validate(address) ? address : null;
//}
//
//export function storeAddress(address: string) {
//  if (!AccAddress.validate(address)) {
//    throw new Error(`${address} is invalidate terra address!`);
//  }
//
//  storage && storage.setItem(WALLET_ADDRESS, address);
//}
//
//export function clearStore() {
//  storage && storage.removeItem(WALLET_ADDRESS);
//}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmFnZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9AdGVycmEtZGV2L2Nocm9tZS1leHRlbnNpb24vc3RvcmFnZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFFbkQsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHLE9BQU8sTUFBTSxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxZQUFZLENBQUM7QUFVaEYsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFXLG9DQUFvQyxDQUFDO0FBRXBFLE1BQU0sVUFBVSxnQkFBZ0I7SUFDOUIsTUFBTSxJQUFJLEdBQUcsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLE9BQU8sQ0FBQyxPQUFPLENBQUMsQ0FBQztJQUV2QyxJQUFJLENBQUMsSUFBSSxFQUFFO1FBQ1QsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFFRCxJQUFJO1FBQ0YsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUVoQyxJQUNFLFlBQVksSUFBSSxNQUFNO1lBQ3RCLGVBQWUsSUFBSSxNQUFNO1lBQ3pCLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLGVBQWUsQ0FBQyxDQUFDLEVBQzVDO1lBQ0EsT0FBTztnQkFDTCxVQUFVLEVBQUUsTUFBTSxDQUFDLFlBQVksQ0FBQztnQkFDaEMsYUFBYSxFQUFFLE1BQU0sQ0FBQyxlQUFlLENBQUM7YUFDdkMsQ0FBQztTQUNIO2FBQU07WUFDTCxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1lBQzdCLE9BQU8sU0FBUyxDQUFDO1NBQ2xCO0tBQ0Y7SUFBQyxXQUFNO1FBQ04sT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUM3QixPQUFPLFNBQVMsQ0FBQztLQUNsQjtBQUNILENBQUM7QUFFRCxNQUFNLFVBQVUsWUFBWSxDQUFDLE9BQWdCO0lBQzNDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxhQUFhLENBQUMsRUFBRTtRQUMvQyxNQUFNLElBQUksS0FBSyxDQUFDLEdBQUcsT0FBTyxDQUFDLGFBQWEsNEJBQTRCLENBQUMsQ0FBQztLQUN2RTtJQUVELE9BQU8sYUFBUCxPQUFPLHVCQUFQLE9BQU8sQ0FBRSxPQUFPLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztBQUNyRCxDQUFDO0FBRUQsTUFBTSxVQUFVLFlBQVk7SUFDMUIsT0FBTyxhQUFQLE9BQU8sdUJBQVAsT0FBTyxDQUFFLFVBQVUsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUMvQixDQUFDO0FBRUQscURBQXFEO0FBQ3JELHFEQUFxRDtBQUNyRCxvRUFBb0U7QUFDcEUsR0FBRztBQUNILEVBQUU7QUFDRixpREFBaUQ7QUFDakQsd0NBQXdDO0FBQ3hDLGlFQUFpRTtBQUNqRSxLQUFLO0FBQ0wsRUFBRTtBQUNGLHdEQUF3RDtBQUN4RCxHQUFHO0FBQ0gsRUFBRTtBQUNGLGdDQUFnQztBQUNoQyxrREFBa0Q7QUFDbEQsR0FBRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFjY0FkZHJlc3MgfSBmcm9tICdAdGVycmEtbW9uZXkvdGVycmEuanMnO1xuXG5leHBvcnQgY29uc3Qgc3RvcmFnZSA9IHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnID8gdW5kZWZpbmVkIDogbG9jYWxTdG9yYWdlO1xuXG4vL2V4cG9ydCBjb25zdCBXQUxMRVRfQUREUkVTUzogc3RyaW5nID1cbi8vICAnX190ZXJyYV9jaHJvbWVfZXh0ZW5zaW9uX3dhbGxldF9hZGRyZXNzX18nO1xuXG5pbnRlcmZhY2UgU2Vzc2lvbiB7XG4gIGlkZW50aWZpZXI6IHN0cmluZztcbiAgd2FsbGV0QWRkcmVzczogc3RyaW5nO1xufVxuXG5leHBvcnQgY29uc3QgU0VTU0lPTjogc3RyaW5nID0gJ19fdGVycmFfY2hyb21lX2V4dGVuc2lvbl9zZXNzaW9uX18nO1xuXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RvcmVkU2Vzc2lvbigpOiBTZXNzaW9uIHwgdW5kZWZpbmVkIHtcbiAgY29uc3QgZGF0YSA9IHN0b3JhZ2U/LmdldEl0ZW0oU0VTU0lPTik7XG5cbiAgaWYgKCFkYXRhKSB7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3Qgb2JqZWN0ID0gSlNPTi5wYXJzZShkYXRhKTtcblxuICAgIGlmIChcbiAgICAgICdpZGVudGlmaWVyJyBpbiBvYmplY3QgJiZcbiAgICAgICd3YWxsZXRBZGRyZXNzJyBpbiBvYmplY3QgJiZcbiAgICAgIEFjY0FkZHJlc3MudmFsaWRhdGUob2JqZWN0Wyd3YWxsZXRBZGRyZXNzJ10pXG4gICAgKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBpZGVudGlmaWVyOiBvYmplY3RbJ2lkZW50aWZpZXInXSxcbiAgICAgICAgd2FsbGV0QWRkcmVzczogb2JqZWN0Wyd3YWxsZXRBZGRyZXNzJ10sXG4gICAgICB9O1xuICAgIH0gZWxzZSB7XG4gICAgICBzdG9yYWdlPy5yZW1vdmVJdGVtKFNFU1NJT04pO1xuICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gIH0gY2F0Y2gge1xuICAgIHN0b3JhZ2U/LnJlbW92ZUl0ZW0oU0VTU0lPTik7XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gc3RvcmVTZXNzaW9uKHNlc3Npb246IFNlc3Npb24pIHtcbiAgaWYgKCFBY2NBZGRyZXNzLnZhbGlkYXRlKHNlc3Npb24ud2FsbGV0QWRkcmVzcykpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoYCR7c2Vzc2lvbi53YWxsZXRBZGRyZXNzfSBpcyBpbnZhbGlkIHRlcnJhIGFkZHJlc3MhYCk7XG4gIH1cblxuICBzdG9yYWdlPy5zZXRJdGVtKFNFU1NJT04sIEpTT04uc3RyaW5naWZ5KHNlc3Npb24pKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyU2Vzc2lvbigpIHtcbiAgc3RvcmFnZT8ucmVtb3ZlSXRlbShTRVNTSU9OKTtcbn1cblxuLy9leHBvcnQgZnVuY3Rpb24gZ2V0U3RvcmVkQWRkcmVzcygpOiBzdHJpbmcgfCBudWxsIHtcbi8vICBjb25zdCBhZGRyZXNzID0gc3RvcmFnZT8uZ2V0SXRlbShXQUxMRVRfQUREUkVTUyk7XG4vLyAgcmV0dXJuIGFkZHJlc3MgJiYgQWNjQWRkcmVzcy52YWxpZGF0ZShhZGRyZXNzKSA/IGFkZHJlc3MgOiBudWxsO1xuLy99XG4vL1xuLy9leHBvcnQgZnVuY3Rpb24gc3RvcmVBZGRyZXNzKGFkZHJlc3M6IHN0cmluZykge1xuLy8gIGlmICghQWNjQWRkcmVzcy52YWxpZGF0ZShhZGRyZXNzKSkge1xuLy8gICAgdGhyb3cgbmV3IEVycm9yKGAke2FkZHJlc3N9IGlzIGludmFsaWRhdGUgdGVycmEgYWRkcmVzcyFgKTtcbi8vICB9XG4vL1xuLy8gIHN0b3JhZ2UgJiYgc3RvcmFnZS5zZXRJdGVtKFdBTExFVF9BRERSRVNTLCBhZGRyZXNzKTtcbi8vfVxuLy9cbi8vZXhwb3J0IGZ1bmN0aW9uIGNsZWFyU3RvcmUoKSB7XG4vLyAgc3RvcmFnZSAmJiBzdG9yYWdlLnJlbW92ZUl0ZW0oV0FMTEVUX0FERFJFU1MpO1xuLy99XG4iXX0=