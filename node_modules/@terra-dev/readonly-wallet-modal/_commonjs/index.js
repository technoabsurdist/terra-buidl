"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.readonlyWalletModal = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const terra_js_1 = require("@terra-money/terra.js");
const react_1 = require("react");
const react_dom_1 = require("react-dom");
const styled_components_1 = __importStar(require("styled-components"));
function readonlyWalletModal({ networks, className, }) {
    return new Promise((resolve) => {
        var _a;
        const modalContainer = window.document.createElement('div');
        function onComplete(session) {
            var _a;
            resolve(session);
            (_a = modalContainer.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(modalContainer);
        }
        const modal = (0, react_1.createElement)(ReadonlyWalletModal, {
            className,
            networks,
            onComplete,
        });
        (0, react_dom_1.render)(modal, modalContainer);
        (_a = window.document.querySelector('body')) === null || _a === void 0 ? void 0 : _a.appendChild(modalContainer);
    });
}
exports.readonlyWalletModal = readonlyWalletModal;
function ReadonlyWalletModalBase({ networks, className, onComplete, }) {
    const [chainID, setChainID] = (0, react_1.useState)(() => networks[0].chainID);
    const [address, setAddress] = (0, react_1.useState)('');
    const validAddress = (0, react_1.useMemo)(() => {
        return terra_js_1.AccAddress.validate(address);
    }, [address]);
    const submit = (0, react_1.useCallback)(() => {
        const network = networks.find((itemNetwork) => itemNetwork.chainID === chainID);
        if (!network)
            return;
        onComplete({
            terraAddress: address,
            network,
        });
    }, [address, chainID, networks, onComplete]);
    return ((0, jsx_runtime_1.jsxs)("div", Object.assign({ className: className }, { children: [(0, jsx_runtime_1.jsx)("div", { onClick: () => onComplete(null) }, void 0), (0, jsx_runtime_1.jsxs)("section", { children: [(0, jsx_runtime_1.jsx)("h1", { children: "View an Address" }, void 0), (0, jsx_runtime_1.jsxs)("label", { children: [(0, jsx_runtime_1.jsx)("select", Object.assign({ value: chainID, onChange: ({ target }) => setChainID(target.value) }, { children: networks.map((itemNetwork) => ((0, jsx_runtime_1.jsxs)("option", { children: [itemNetwork.name[0].toUpperCase() + itemNetwork.name.slice(1), ' ', "- ", itemNetwork.chainID] }, itemNetwork.chainID))) }), void 0), (0, jsx_runtime_1.jsx)("svg", Object.assign({ viewBox: "0 0 10 6" }, { children: (0, jsx_runtime_1.jsx)("polyline", { points: "1 1 5 5 9 1" }, void 0) }), void 0)] }, void 0), (0, jsx_runtime_1.jsx)("input", { type: "text", value: address, onChange: ({ target }) => setAddress(target.value) }, void 0), (0, jsx_runtime_1.jsx)("button", Object.assign({ disabled: !validAddress, onClick: submit }, { children: "View an Address" }), void 0)] }, void 0)] }), void 0));
}
const modalEnter = (0, styled_components_1.keyframes) `
  0% {
    opacity: 0;
  }
  
  100% {
    opacity: 1;
  }
`;
const sectionEnter = (0, styled_components_1.keyframes) `
  0% {
    opacity: 0;
    transform: scale(0.4);
  }
  
  100% {
    opacity: 1;
    transform: scale(1);
  }
`;
const ReadonlyWalletModal = (0, styled_components_1.default)(ReadonlyWalletModalBase) `
  position: fixed;
  z-index: 100000;

  color: #000000;

  left: 0;
  top: 0;
  width: 100vw;
  height: 100vh;

  display: grid;
  place-content: center;

  > div {
    position: fixed;
    z-index: -1;

    left: 0;
    top: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.3);

    animation: ${modalEnter} 0.2s ease-in-out;
  }

  > section {
    max-width: 80vw;
    width: 450px;

    border-radius: 25px;

    background-color: #ffffff;
    box-shadow: 0 4px 18px 3px rgba(0, 0, 0, 0.43);

    animation: ${sectionEnter} 0.2s ease-in-out;

    padding: 50px 60px;

    h1 {
      font-size: 27px;
      font-weight: 500;

      text-align: center;

      margin-bottom: 24px;
    }

    label {
      position: relative;

      select {
        -webkit-appearance: none;
        outline: none;
        padding: 10px 40px 10px 12px;
        width: 100%;
        border: 1px solid #2c2c2c;
        border-radius: 10px;
        cursor: pointer;
        font-family: inherit;
        font-size: 13px;
      }

      svg {
        position: absolute;
        right: 12px;
        top: calc(50%);
        width: 10px;
        height: 6px;
        stroke-width: 2px;
        stroke: #2c2c2c;
        fill: none;
        stroke-linecap: round;
        stroke-linejoin: round;
        pointer-events: none;
      }
    }

    input {
      box-sizing: border-box;
      margin-top: 10px;

      font-size: 13px;
      outline: none;
      border-radius: 10px;
      padding: 0 12px;
      width: 100%;
      height: 37px;
      border: 1px solid #2c2c2c;
    }

    button {
      margin-top: 20px;

      cursor: pointer;

      display: block;
      outline: none;
      width: 100%;
      height: 40px;
      font-size: 13px;
      letter-spacing: -0.2px;
      border-radius: 18px;
      border: 0;

      color: #ffffff;
      background-color: #2c2c2c;

      &:disabled {
        opacity: 0.4;
      }
    }
  }
`;
//# sourceMappingURL=data:application/json;base64,