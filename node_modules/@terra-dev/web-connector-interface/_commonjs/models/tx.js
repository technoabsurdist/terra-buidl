"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deserializeTx = exports.serializeTx = exports.WebConnectorTxStatus = void 0;
const terra_js_1 = require("@terra-money/terra.js");
var WebConnectorTxStatus;
(function (WebConnectorTxStatus) {
    WebConnectorTxStatus["PROGRESS"] = "PROGRESS";
    WebConnectorTxStatus["SUCCEED"] = "SUCCEED";
    WebConnectorTxStatus["FAIL"] = "FAIL";
    WebConnectorTxStatus["DENIED"] = "DENIED";
})(WebConnectorTxStatus = exports.WebConnectorTxStatus || (exports.WebConnectorTxStatus = {}));
function serializeTx(tx) {
    var _a, _b, _c;
    return {
        msgs: tx.msgs.map((msg) => msg.toJSON()),
        fee: (_a = tx.fee) === null || _a === void 0 ? void 0 : _a.toJSON(),
        memo: tx.memo,
        gasPrices: (_b = tx.gasPrices) === null || _b === void 0 ? void 0 : _b.toString(),
        gasAdjustment: (_c = tx.gasAdjustment) === null || _c === void 0 ? void 0 : _c.toString(),
        feeDenoms: tx.feeDenoms,
    };
}
exports.serializeTx = serializeTx;
function deserializeTx(tx) {
    const msgs = tx.msgs.map((msg) => JSON.parse(msg));
    const isProto = '@type' in msgs[0];
    return {
        ...tx,
        msgs: msgs.map((msg) => (isProto ? terra_js_1.Msg.fromData(msg) : terra_js_1.Msg.fromAmino(msg))),
        fee: tx.fee
            ? isProto
                ? terra_js_1.Fee.fromData(JSON.parse(tx.fee))
                : terra_js_1.Fee.fromAmino(JSON.parse(tx.fee))
            : undefined,
    };
}
exports.deserializeTx = deserializeTx;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvQHRlcnJhLWRldi93ZWItY29ubmVjdG9yLWludGVyZmFjZS9tb2RlbHMvdHgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsb0RBQWtFO0FBT2xFLElBQVksb0JBS1g7QUFMRCxXQUFZLG9CQUFvQjtJQUM5Qiw2Q0FBcUIsQ0FBQTtJQUNyQiwyQ0FBbUIsQ0FBQTtJQUNuQixxQ0FBYSxDQUFBO0lBQ2IseUNBQWlCLENBQUE7QUFDbkIsQ0FBQyxFQUxXLG9CQUFvQixHQUFwQiw0QkFBb0IsS0FBcEIsNEJBQW9CLFFBSy9CO0FBMkNELFNBQWdCLFdBQVcsQ0FBQyxFQUFtQjs7SUFDN0MsT0FBTztRQUNMLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxDQUFDO1FBQ3hDLEdBQUcsRUFBRSxNQUFBLEVBQUUsQ0FBQyxHQUFHLDBDQUFFLE1BQU0sRUFBRTtRQUNyQixJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUk7UUFDYixTQUFTLEVBQUUsTUFBQSxFQUFFLENBQUMsU0FBUywwQ0FBRSxRQUFRLEVBQUU7UUFDbkMsYUFBYSxFQUFFLE1BQUEsRUFBRSxDQUFDLGFBQWEsMENBQUUsUUFBUSxFQUFFO1FBQzNDLFNBQVMsRUFBRSxFQUFFLENBQUMsU0FBUztLQUN4QixDQUFDO0FBQ0osQ0FBQztBQVRELGtDQVNDO0FBRUQsU0FBZ0IsYUFBYSxDQUFDLEVBQTZCO0lBQ3pELE1BQU0sSUFBSSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7SUFDbkQsTUFBTSxPQUFPLEdBQUcsT0FBTyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztJQUVuQyxPQUFPO1FBQ0wsR0FBRyxFQUFFO1FBQ0wsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxjQUFHLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxjQUFHLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDM0UsR0FBRyxFQUFFLEVBQUUsQ0FBQyxHQUFHO1lBQ1QsQ0FBQyxDQUFDLE9BQU87Z0JBQ1AsQ0FBQyxDQUFDLGNBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUM7Z0JBQ2xDLENBQUMsQ0FBQyxjQUFHLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1lBQ3JDLENBQUMsQ0FBQyxTQUFTO0tBQ2QsQ0FBQztBQUNKLENBQUM7QUFiRCxzQ0FhQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENyZWF0ZVR4T3B0aW9ucywgRmVlLCBNc2cgfSBmcm9tICdAdGVycmEtbW9uZXkvdGVycmEuanMnO1xuaW1wb3J0IHtcbiAgV2ViQ29ubmVjdG9yQ3JlYXRlVHhGYWlsZWQsXG4gIFdlYkNvbm5lY3RvclR4RmFpbGVkLFxuICBXZWJDb25uZWN0b3JUeFVuc3BlY2lmaWVkRXJyb3IsXG59IGZyb20gJy4uL2Vycm9ycyc7XG5cbmV4cG9ydCBlbnVtIFdlYkNvbm5lY3RvclR4U3RhdHVzIHtcbiAgUFJPR1JFU1MgPSAnUFJPR1JFU1MnLFxuICBTVUNDRUVEID0gJ1NVQ0NFRUQnLFxuICBGQUlMID0gJ0ZBSUwnLFxuICBERU5JRUQgPSAnREVOSUVEJyxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXZWJDb25uZWN0b3JUeFByb2dyZXNzIHtcbiAgc3RhdHVzOiBXZWJDb25uZWN0b3JUeFN0YXR1cy5QUk9HUkVTUztcbiAgcGF5bG9hZD86IHVua25vd247XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgV2ViQ29ubmVjdG9yVHhTdWNjZWVkIHtcbiAgc3RhdHVzOiBXZWJDb25uZWN0b3JUeFN0YXR1cy5TVUNDRUVEO1xuICBwYXlsb2FkOiB7XG4gICAgaGVpZ2h0OiBudW1iZXI7XG4gICAgcmF3X2xvZzogc3RyaW5nO1xuICAgIHR4aGFzaDogc3RyaW5nO1xuICB9O1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIFdlYkNvbm5lY3RvclR4RmFpbCB7XG4gIHN0YXR1czogV2ViQ29ubmVjdG9yVHhTdGF0dXMuRkFJTDtcbiAgZXJyb3I6XG4gICAgfCBXZWJDb25uZWN0b3JDcmVhdGVUeEZhaWxlZFxuICAgIHwgV2ViQ29ubmVjdG9yVHhGYWlsZWRcbiAgICB8IFdlYkNvbm5lY3RvclR4VW5zcGVjaWZpZWRFcnJvcjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBXZWJDb25uZWN0b3JUeERlbmllZCB7XG4gIHN0YXR1czogV2ViQ29ubmVjdG9yVHhTdGF0dXMuREVOSUVEO1xufVxuXG5leHBvcnQgdHlwZSBXZWJDb25uZWN0b3JUeFJlc3VsdCA9XG4gIHwgV2ViQ29ubmVjdG9yVHhQcm9ncmVzc1xuICB8IFdlYkNvbm5lY3RvclR4U3VjY2VlZFxuICB8IFdlYkNvbm5lY3RvclR4RmFpbFxuICB8IFdlYkNvbm5lY3RvclR4RGVuaWVkO1xuXG4vLyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbi8vIGZ1bmN0aW9uc1xuLy8gLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5leHBvcnQgaW50ZXJmYWNlIFNlcmlhbGl6ZWRDcmVhdGVUeE9wdGlvbnNcbiAgZXh0ZW5kcyBPbWl0PENyZWF0ZVR4T3B0aW9ucywgJ21zZ3MnIHwgJ2ZlZSc+IHtcbiAgbXNnczogc3RyaW5nW107XG4gIGZlZTogc3RyaW5nIHwgdW5kZWZpbmVkO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2VyaWFsaXplVHgodHg6IENyZWF0ZVR4T3B0aW9ucyk6IFNlcmlhbGl6ZWRDcmVhdGVUeE9wdGlvbnMge1xuICByZXR1cm4ge1xuICAgIG1zZ3M6IHR4Lm1zZ3MubWFwKChtc2cpID0+IG1zZy50b0pTT04oKSksXG4gICAgZmVlOiB0eC5mZWU/LnRvSlNPTigpLFxuICAgIG1lbW86IHR4Lm1lbW8sXG4gICAgZ2FzUHJpY2VzOiB0eC5nYXNQcmljZXM/LnRvU3RyaW5nKCksXG4gICAgZ2FzQWRqdXN0bWVudDogdHguZ2FzQWRqdXN0bWVudD8udG9TdHJpbmcoKSxcbiAgICBmZWVEZW5vbXM6IHR4LmZlZURlbm9tcyxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGRlc2VyaWFsaXplVHgodHg6IFNlcmlhbGl6ZWRDcmVhdGVUeE9wdGlvbnMpOiBDcmVhdGVUeE9wdGlvbnMge1xuICBjb25zdCBtc2dzID0gdHgubXNncy5tYXAoKG1zZykgPT4gSlNPTi5wYXJzZShtc2cpKTtcbiAgY29uc3QgaXNQcm90byA9ICdAdHlwZScgaW4gbXNnc1swXTtcblxuICByZXR1cm4ge1xuICAgIC4uLnR4LFxuICAgIG1zZ3M6IG1zZ3MubWFwKChtc2cpID0+IChpc1Byb3RvID8gTXNnLmZyb21EYXRhKG1zZykgOiBNc2cuZnJvbUFtaW5vKG1zZykpKSxcbiAgICBmZWU6IHR4LmZlZVxuICAgICAgPyBpc1Byb3RvXG4gICAgICAgID8gRmVlLmZyb21EYXRhKEpTT04ucGFyc2UodHguZmVlKSlcbiAgICAgICAgOiBGZWUuZnJvbUFtaW5vKEpTT04ucGFyc2UodHguZmVlKSlcbiAgICAgIDogdW5kZWZpbmVkLFxuICB9O1xufVxuIl19